"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const net_service_1 = require("../../../service/net.service");
Page({
    data: {
        current: 'jc',
        subdistrict_id: '',
        address: '',
        date: '',
        showDate: false,
        minDate: new Date(2020, 0, 1).getTime(),
        maxDate: new Date(2050, 11, 31).getTime(),
        show: false,
        isShow1: false,
        isShow2: false,
        isShow3: false,
        detailsObj: {},
        array: ['多层', '高层', '别墅', '混合', '其他'],
        array2: ['公建配套厢房', '临建厢房', '违建厢房', '不详厢房', '临时_定时定点投放点位', '固定_定时定点投放点位'],
        items1: [
            { name: '供水', value: 1, checked: false, disabled: false },
            { name: '供电', value: 2, checked: false, disabled: false },
            { name: '排污', value: 3, checked: false, disabled: false },
            { name: '监控', value: 4, checked: false, disabled: false },
        ],
        items: [
            { name: '干垃圾', value: 1, checked: false, disabled: false },
            { name: '湿垃圾', value: 2, checked: false, disabled: false },
            { name: '可回收垃圾', value: 3, checked: false, disabled: false },
            { name: '有害垃圾', value: 4, checked: false, disabled: false },
        ],
        index: -1,
        jcData: {
            thumb_img: '',
            household_num: '',
            building_num: '',
            volunteer_total: '',
            cleaner_total: '',
            house_type: '选择房屋类型',
            building_time: '',
            address: '',
            class_manager: '',
            class_manager_mobile: '',
            cleaner_person: '',
            cleaner_mobile: ''
        },
        shljData: {
            dry_garbage_container: '',
            wet_refuse_container: '',
            recyclable_garbage_container: '',
            hazardous_waste_container: '',
            building_waste_container: '',
        },
        byData: {
            img_url: '',
            brand: '',
            use_type: '',
            plate_number: '',
            model: ''
        },
        ljxfData: {
            image_url: '',
            wing_room_name: '',
            mark: '',
            address: '',
            wing_type: '选择箱房性质',
            infoList: [],
            classList: []
        }
    },
    tap(e) {
        this.setData({
            current: e.currentTarget.dataset.type
        });
    },
    add2() {
        this.setData({
            isShow2: true
        });
    },
    add3() {
        this.setData({
            isShow3: true
        });
    },
    delete2(e) {
        console.log(e);
        let data = {
            subdistrict_id: this.data.subdistrict_id,
            car_id: e.currentTarget.dataset.car_id,
            del_flag: -1
        };
        net_service_1.default.deleteBy(data).then(res => {
            console.log(res);
            this.getDataObjt();
        });
    },
    delete3(e) {
        console.log(e);
        let data = {
            subdistrict_id: this.data.subdistrict_id,
            type: this.data.detailsObj.type || this.data.detailsObj.wing_room[0].type,
            wing_room_id: e.currentTarget.dataset.wing_room_id,
            del_flag: -1
        };
        net_service_1.default.deleteLjxf(data).then(res => {
            console.log(res);
            this.getDataObjt();
        });
    },
    showDate() {
        this.setData({ showDate: true });
    },
    nClose() {
        this.setData({ showDate: false });
    },
    formatDate(e) {
        let date = new Date(e);
        return `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`;
    },
    onConfirm(event) {
        this.data.date = '';
        let newDate = this.formatDate(event.detail);
        this.setData({
            showDate: false,
            date: newDate
        });
        this.data.jcData.building_time = newDate;
    },
    getDataObjt() {
        net_service_1.default.getCommunityDetail2().then((res) => {
            console.log('详情数据', res);
            this.setData({
                detailsObj: res.data.result,
                subdistrict_id: res.data.result.subdistrict_id
            });
        });
    },
    onRemoveImgTap(e) {
        let images = e.detail.all;
        let updata = this.data.jcData;
        updata.thumb_img = images;
        this.setData({
            jcData: updata
        });
    },
    onImgChangeTap(e) {
        let images = e.detail.current;
        let thumb_img = this.data.jcData.thumb_img;
        let updata = this.data.jcData;
        net_service_1.default.uploadImgs(images).then((res) => {
            thumb_img = [...thumb_img, ...res];
            updata.thumb_img = thumb_img;
            this.setData({
                jcData: updata,
            });
        }, (err) => {
            updata.thumb_img = thumb_img;
            this.setData({
                jcData: updata,
            });
        });
    },
    onRemoveImgTap2(e) {
        let images = e.detail.all;
        let updata = this.data.byData;
        updata.img_url = images;
        this.setData({
            byData: updata
        });
    },
    onImgChangeTap2(e) {
        let images = e.detail.current;
        let img_url = this.data.byData.img_url;
        let updata = this.data.byData;
        net_service_1.default.uploadImgs(images).then((res) => {
            img_url = [...img_url, ...res];
            updata.img_url = img_url;
            this.setData({
                byData: updata,
            });
        }, (err) => {
            updata.img_url = img_url;
            this.setData({
                byData: updata,
            });
        });
    },
    onRemoveImgTap3(e) {
        let images = e.detail.all;
        let updata = this.data.ljxfData;
        updata.image_url = images;
        this.setData({
            ljxfData: updata
        });
    },
    onImgChangeTap3(e) {
        let images = e.detail.current;
        let image_url = this.data.ljxfData.image_url;
        let updata = this.data.ljxfData;
        net_service_1.default.uploadImgs(images).then((res) => {
            image_url = [...image_url, ...res];
            updata.image_url = image_url;
            this.setData({
                ljxfData: updata,
            });
        }, (err) => {
            updata.img_url = image_url;
            this.setData({
                ljxfData: updata,
            });
        });
    },
    onChangeTap(e) {
        console.log('checkbox发生change事件，携带value值为：', e.detail.value);
        this.data.ljxfData.infoList = e.detail.value;
    },
    checkboxChange(e) {
        console.log('checkbox发生change事件，携带value值为：', e.detail.value);
        this.data.ljxfData.classList = e.detail.value;
    },
    getCurrentLocal() {
        let that = this;
        wx.getSetting({
            success(res) {
                if (res.authSetting['scope.userLocation'] == false) {
                    wx.openSetting({
                        success(res) { }
                    });
                }
                else {
                    that.getMyLocation();
                }
                that.getMyLocation();
            }
        });
    },
    getMyLocation() {
        let that = this;
        this.data.address = '';
        wx.chooseLocation({
            success(res) {
                console.log('地理位置', res);
                that.setData({
                    address: res.address
                });
                that.data.ljxfData.address = res.address;
                console.log('xxx1', that.data.ljxfData.address);
            }
        });
    },
    inputform1(e) {
        let key = e.currentTarget.dataset.key;
        let data = this.data.jcData;
        data[key] = e.detail.currentKey || e.detail.value;
        this.setData({
            jcData: data
        });
    },
    inputform3(e) {
        let key = e.currentTarget.dataset.key;
        let data = this.data.shljData;
        data[key] = e.detail.currentKey || e.detail.value;
        this.setData({
            shljData: data
        });
    },
    inputform4(e) {
        let key = e.currentTarget.dataset.key;
        let data = this.data.byData;
        data[key] = e.detail.currentKey || e.detail.value;
        this.setData({
            byData: data
        });
    },
    inputform5(e) {
        let key = e.currentTarget.dataset.key;
        let data = this.data.ljxfData;
        data[key] = e.detail.currentKey || e.detail.value;
        this.setData({
            ljxfData: data
        });
    },
    submit1() {
        if (this.data.jcData.house_type) {
            this.data.jcData.house_type = this.data.jcData.house_type * 1 + 1;
        }
        this.data.jcData.subdistrict_id = this.data.subdistrict_id;
        this.data.jcData.thumb_img = this.data.jcData.thumb_img.toString();
        console.log('基础：', this.data.jcData);
        net_service_1.default.jcEdit(this.data.jcData).then(res => {
            console.log(res);
            this.setData({ show: true });
        });
    },
    submit3() {
        this.data.shljData.subdistrict_id = this.data.subdistrict_id;
        console.log('生活垃圾：', this.data.shljData);
        net_service_1.default.jcEdit(this.data.shljData).then(res => {
            console.log(res);
            this.setData({ show: true });
        });
    },
    submit4() {
        this.data.byData.subdistrict_id = this.data.subdistrict_id;
        this.data.byData.img_url = this.data.byData.img_url.toString();
        console.log('驳运：', this.data.byData);
        net_service_1.default.byEdit(this.data.byData).then(res => {
            console.log(res);
            this.setData({
                show: true,
                isShow2: false
            });
            this.getDataObjt();
        });
    },
    submit5() {
        if (this.data.ljxfData.wing_type) {
            this.data.ljxfData.wing_type = this.data.ljxfData.wing_type * 1 + 1;
        }
        this.data.ljxfData.subdistrict_id = this.data.subdistrict_id;
        this.data.ljxfData.type = this.data.detailsObj.type || this.data.detailsObj.wing_room[0].type;
        this.data.ljxfData.image_url = this.data.ljxfData.image_url.toString();
        console.log('垃圾箱房：', this.data.ljxfData);
        net_service_1.default.ljxfEdit(this.data.ljxfData).then(res => {
            console.log(res);
            this.setData({
                show: true,
                isShow3: false
            });
            this.getDataObjt();
        });
    },
    onLoad() {
        wx.lin.initValidateForm(this);
    },
    onReady() {
        this.getDataObjt();
    },
    onShow() {
    },
    onHide() {
    },
    onUnload() {
    },
    onPullDownRefresh() {
    },
    onReachBottom() {
    },
    onShareAppMessage(opts) {
        console.log(opts.target);
        return {};
    }
});
//# sourceMappingURL=data:application/json;base64,