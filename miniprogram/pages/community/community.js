"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const net_service_1 = require("../../service/net.service");
Page({
    data: {
        mainData: [],
        pagenum: 1,
        current: 'community',
        user: {}
    },
    tap(e) {
        this.setData({
            current: e.currentTarget.dataset.type
        });
        this.getMainData();
        console.log(1111);
    },
    go(e) {
        wx.navigateTo({ url: e.currentTarget.dataset.url });
    },
    getMainData() {
        let data = {
            type: 'unit',
            page: this.data.pagenum,
            pageSize: 10
        };
        net_service_1.default.getCommunityList(data).then((res) => {
            console.log(res);
            var arr1 = this.data.mainData;
            var arr2 = res.data.result;
            arr1 = arr1.concat(arr2);
            this.setData({
                mainData: arr1
            });
        });
    },
    onShow() {
        this.setData({
            date: net_service_1.default.getDate()
        });
        this.getMainData();
    },
    onReachBottom: function () {
        var that = this;
        var pagenum = that.data.pagenum + 1;
        console.log(that.data.pagenum, '1111');
        this.setData({
            pagenum: pagenum,
        });
        this.getMainData();
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbXVuaXR5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY29tbXVuaXR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkRBQTRDO0FBRzVDLElBQUksQ0FBQztJQUlILElBQUksRUFBRTtRQUNKLFFBQVEsRUFBTSxFQUFFO1FBQ2hCLE9BQU8sRUFBRSxDQUFDO1FBRVYsT0FBTyxFQUFZLFdBQVc7UUFDOUIsSUFBSSxFQUFNLEVBQUU7S0FDYjtJQUNELEdBQUcsQ0FBRSxDQUFLO1FBQ1IsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNYLE9BQU8sRUFBRSxDQUFDLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxJQUFJO1NBQ3RDLENBQUMsQ0FBQTtRQUNGLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNuQixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3BCLENBQUM7SUFDRCxFQUFFLENBQUMsQ0FBSztRQUVOLEVBQUUsQ0FBQyxVQUFVLENBQUMsRUFBQyxHQUFHLEVBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFDLENBQUMsQ0FBQTtJQUNsRCxDQUFDO0lBQ0QsV0FBVztRQUNULElBQUksSUFBSSxHQUFHO1lBQ1QsSUFBSSxFQUFZLE1BQU07WUFDdEIsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTztZQUN2QixRQUFRLEVBQUUsRUFBRTtTQUNiLENBQUE7UUFDRCxxQkFBRyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQU8sRUFBQyxFQUFFO1lBQ3pDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDakIsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7WUFDOUIsSUFBSSxJQUFJLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDM0IsSUFBSSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDekIsSUFBSSxDQUFDLE9BQU8sQ0FBQztnQkFDWCxRQUFRLEVBQUUsSUFBSTthQUNmLENBQUMsQ0FBQTtRQUNKLENBQUMsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUlELE1BQU07UUFDSixJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1gsSUFBSSxFQUFDLHFCQUFHLENBQUMsT0FBTyxFQUFFO1NBQ25CLENBQUMsQ0FBQTtRQUVGLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQTtJQUNwQixDQUFDO0lBQ0QsYUFBYSxFQUFFO1FBQ2IsSUFBSSxJQUFJLEdBQUMsSUFBSSxDQUFDO1FBQ2QsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQ3BDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNYLE9BQU8sRUFBRSxPQUFPO1NBQ2pCLENBQUMsQ0FBQTtRQUNGLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNyQixDQUFDO0NBRUYsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFwaSBmcm9tICcuLi8uLi9zZXJ2aWNlL25ldC5zZXJ2aWNlJztcclxuaW1wb3J0IHttYWluVHlwZX0gZnJvbSAnLi4vLi4vc2VydmljZS9uZXQuc2VydmljZSc7XHJcblxyXG5QYWdlKHtcclxuICAvKipcclxuICAgKiDpobXpnaLnmoTliJ3lp4vmlbDmja5cclxuICAgKi9cclxuICBkYXRhOiB7XHJcbiAgICBtYWluRGF0YTo8YW55PltdLFxyXG4gICAgcGFnZW51bTogMSxcclxuICAgIC8vIHN1YmRpc3RyaWN0X2lkOiAwLFxyXG4gICAgY3VycmVudDogPG1haW5UeXBlPidjb21tdW5pdHknLFxyXG4gICAgdXNlcjo8YW55Pnt9XHJcbiAgfSxcclxuICB0YXAgKGU6YW55KSB7XHJcbiAgICB0aGlzLnNldERhdGEoe1xyXG4gICAgICBjdXJyZW50OiBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldC50eXBlXHJcbiAgICB9KVxyXG4gICAgdGhpcy5nZXRNYWluRGF0YSgpO1xyXG4gICAgY29uc29sZS5sb2coMTExMSk7XHJcbiAgfSxcclxuICBnbyhlOmFueSl7XHJcbiAgICAvLyBjb25zb2xlLmxvZyhlLmN1cnJlbnRUYXJnZXQuZGF0YXNldC51cmwpXHJcbiAgICB3eC5uYXZpZ2F0ZVRvKHt1cmw6ZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQudXJsfSlcclxuICB9LFxyXG4gIGdldE1haW5EYXRhKCkge1xyXG4gICAgbGV0IGRhdGEgPSB7XHJcbiAgICAgIHR5cGU6PG1haW5UeXBlPiAndW5pdCcsXHJcbiAgICAgIHBhZ2U6IHRoaXMuZGF0YS5wYWdlbnVtLFxyXG4gICAgICBwYWdlU2l6ZTogMTBcclxuICAgIH1cclxuICAgIGFwaS5nZXRDb21tdW5pdHlMaXN0KGRhdGEpLnRoZW4oKHJlczphbnkpPT57XHJcbiAgICAgIGNvbnNvbGUubG9nKHJlcyk7XHJcbiAgICAgIHZhciBhcnIxID0gdGhpcy5kYXRhLm1haW5EYXRhOyAvL+S7jmRhdGHojrflj5blvZPliY1kYXRhbGlzdOaVsOe7hFxyXG4gICAgICB2YXIgYXJyMiA9IHJlcy5kYXRhLnJlc3VsdDsgLy/ku47mraTmrKHor7fmsYLov5Tlm57nmoTmlbDmja7kuK3ojrflj5bmlrDmlbDnu4RcclxuICAgICAgYXJyMSA9IGFycjEuY29uY2F0KGFycjIpOyAvL+WQiOW5tuaVsOe7hFxyXG4gICAgICB0aGlzLnNldERhdGEoe1xyXG4gICAgICAgIG1haW5EYXRhOiBhcnIxIC8v5ZCI5bm25ZCO5pu05pawZGF0YWxpc3RcclxuICAgICAgfSlcclxuICAgIH0pXHJcbiAgfSxcclxuICAgIC8qKlxyXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5pi+56S6XHJcbiAgICovXHJcbiAgb25TaG93KCkge1xyXG4gICAgdGhpcy5zZXREYXRhKHtcclxuICAgICAgZGF0ZTphcGkuZ2V0RGF0ZSgpXHJcbiAgICB9KVxyXG4gICAgLy8gdGhpcy51c2VySW5pdCgpXHJcbiAgICB0aGlzLmdldE1haW5EYXRhKClcclxuICB9LFxyXG4gIG9uUmVhY2hCb3R0b206IGZ1bmN0aW9uICgpIHsgLy/op6blupXlvIDlp4vkuIvkuIDpobVcclxuICAgIHZhciB0aGF0PXRoaXM7XHJcbiAgICB2YXIgcGFnZW51bSA9IHRoYXQuZGF0YS5wYWdlbnVtICsgMTsgLy/ojrflj5blvZPliY3pobXmlbDlubYrMVxyXG4gICAgY29uc29sZS5sb2codGhhdC5kYXRhLnBhZ2VudW0sICcxMTExJyk7XHJcbiAgICB0aGlzLnNldERhdGEoe1xyXG4gICAgICBwYWdlbnVtOiBwYWdlbnVtLCAvL+abtOaWsOW9k+WJjemhteaVsFxyXG4gICAgfSlcclxuICAgIHRoaXMuZ2V0TWFpbkRhdGEoKTsvL+mHjeaWsOiwg+eUqOivt+axguiOt+WPluS4i+S4gOmhteaVsOaNrlxyXG4gIH0sXHJcblxyXG59KSJdfQ==